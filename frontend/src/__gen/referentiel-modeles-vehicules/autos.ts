/*
 * Generated by orval v5.3.2 üç∫
 * Do not edit manually.
 * API modeles-vehicules
 * Cette API permet de g√©rer le r√©f√©rentiel des v√©hicules (mod√®le g√©n√©rique).<br> Un v√©hicule peut √™tre de type auto, moto, quad, cyclo ou camping-car.<br> L'API permet d'exposer (recherche, consultation) des donn√©es sp√©cifiques √† chaque type de v√©hicules (par exemple le nombre de portes pour un v√©hicule de type auto) ou communes √† tous les types de v√©hicules (par exemple recherche d'un v√©hicule par immatriculation).

 * OpenAPI spec version: 1.6.5
 */
import axios,{
  AxiosRequestConfig
} from 'axios'
import {
  useQuery,
  UseQueryOptions
} from 'react-query'
import type {
  VehiculeSynthese,
  RecupererListeAutosParams,
  CarrosserieVehicule,
  RecupererListeCarrosseriesAutosParams,
  EnergieVehicule,
  RecupererListeEnergiesAutosParams,
  FamilleVehicule,
  RecupererListeFamillesAutosParams,
  GroupeTarificationVehicule,
  RecupererListeGroupesTarifAutosParams,
  MarqueVehicule,
  RecupererListeMarquesAutosParams,
  MotorisationVehicule,
  RecupererListeMotorisationsAutosParams,
  NombrePortesVehicule,
  RecupererListeNbPortesAutosParams,
  TransmissionVehicule,
  RecupererListeTransmissionsAutosParams
} from './referentiel-modeles-vehicules.schemas'
import {
  rest
} from 'msw'


type AsyncReturnType<
T extends (...args: any) => Promise<any>
> = T extends (...args: any) => Promise<infer R> ? R : any;


export const recupererListeAutos = <Data = unknown>(
    params?: RecupererListeAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? VehiculeSynthese[] : Data>(
      `/vehicules/autos`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeAutosQueryKey = (params?: RecupererListeAutosParams,) => [`/vehicules/autos`, ...(params ? [params]: [])]

    
export const useRecupererListeAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeAutos>, Error>(queryKey, () => recupererListeAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeCarrosseriesAutos = <Data = unknown>(
    params?: RecupererListeCarrosseriesAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? CarrosserieVehicule[] : Data>(
      `/vehicules/autos/carrosseries`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeCarrosseriesAutosQueryKey = (params?: RecupererListeCarrosseriesAutosParams,) => [`/vehicules/autos/carrosseries`, ...(params ? [params]: [])]

    
export const useRecupererListeCarrosseriesAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeCarrosseriesAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeCarrosseriesAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeCarrosseriesAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeCarrosseriesAutos>, Error>(queryKey, () => recupererListeCarrosseriesAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeEnergiesAutos = <Data = unknown>(
    params?: RecupererListeEnergiesAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? EnergieVehicule[] : Data>(
      `/vehicules/autos/energies`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeEnergiesAutosQueryKey = (params?: RecupererListeEnergiesAutosParams,) => [`/vehicules/autos/energies`, ...(params ? [params]: [])]

    
export const useRecupererListeEnergiesAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeEnergiesAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeEnergiesAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeEnergiesAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeEnergiesAutos>, Error>(queryKey, () => recupererListeEnergiesAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeFamillesAutos = <Data = unknown>(
    params?: RecupererListeFamillesAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? FamilleVehicule[] : Data>(
      `/vehicules/autos/familles`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeFamillesAutosQueryKey = (params?: RecupererListeFamillesAutosParams,) => [`/vehicules/autos/familles`, ...(params ? [params]: [])]

    
export const useRecupererListeFamillesAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeFamillesAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeFamillesAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeFamillesAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeFamillesAutos>, Error>(queryKey, () => recupererListeFamillesAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeGroupesTarifAutos = <Data = unknown>(
    params?: RecupererListeGroupesTarifAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? GroupeTarificationVehicule[] : Data>(
      `/vehicules/autos/groupes_tarification`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeGroupesTarifAutosQueryKey = (params?: RecupererListeGroupesTarifAutosParams,) => [`/vehicules/autos/groupes_tarification`, ...(params ? [params]: [])]

    
export const useRecupererListeGroupesTarifAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeGroupesTarifAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeGroupesTarifAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeGroupesTarifAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeGroupesTarifAutos>, Error>(queryKey, () => recupererListeGroupesTarifAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeMarquesAutos = <Data = unknown>(
    params?: RecupererListeMarquesAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? MarqueVehicule[] : Data>(
      `/vehicules/autos/marques`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeMarquesAutosQueryKey = (params?: RecupererListeMarquesAutosParams,) => [`/vehicules/autos/marques`, ...(params ? [params]: [])]

    
export const useRecupererListeMarquesAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeMarquesAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeMarquesAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeMarquesAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeMarquesAutos>, Error>(queryKey, () => recupererListeMarquesAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeMotorisationsAutos = <Data = unknown>(
    params?: RecupererListeMotorisationsAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? MotorisationVehicule[] : Data>(
      `/vehicules/autos/motorisations`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeMotorisationsAutosQueryKey = (params?: RecupererListeMotorisationsAutosParams,) => [`/vehicules/autos/motorisations`, ...(params ? [params]: [])]

    
export const useRecupererListeMotorisationsAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeMotorisationsAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeMotorisationsAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeMotorisationsAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeMotorisationsAutos>, Error>(queryKey, () => recupererListeMotorisationsAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeNbPortesAutos = <Data = unknown>(
    params?: RecupererListeNbPortesAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? NombrePortesVehicule[] : Data>(
      `/vehicules/autos/nombres_portes`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeNbPortesAutosQueryKey = (params?: RecupererListeNbPortesAutosParams,) => [`/vehicules/autos/nombres_portes`, ...(params ? [params]: [])]

    
export const useRecupererListeNbPortesAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeNbPortesAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeNbPortesAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeNbPortesAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeNbPortesAutos>, Error>(queryKey, () => recupererListeNbPortesAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}

export const recupererListeTransmissionsAutos = <Data = unknown>(
    params?: RecupererListeTransmissionsAutosParams, options?: AxiosRequestConfig
 ) => {
    return axios.get<Data extends unknown ? TransmissionVehicule[] : Data>(
      `/vehicules/autos/transmissions`,
      {
        params,
  baseURL: '/api/referentiel/modeles_vehicules', 
    ...options },
    );
  }


export const getRecupererListeTransmissionsAutosQueryKey = (params?: RecupererListeTransmissionsAutosParams,) => [`/vehicules/autos/transmissions`, ...(params ? [params]: [])]

    
export const useRecupererListeTransmissionsAutos = <
  Data extends unknown = unknown,
  Error extends unknown = unknown
>(
 params?: RecupererListeTransmissionsAutosParams, options?: { query?:UseQueryOptions<AsyncReturnType<typeof recupererListeTransmissionsAutos>, Error>, axios?: AxiosRequestConfig}

  ) => {
  const queryKey = getRecupererListeTransmissionsAutosQueryKey(params);
  const {query: queryOptions, axios: axiosOptions} = options || {}

  const query = useQuery<AsyncReturnType<typeof recupererListeTransmissionsAutos>, Error>(queryKey, () => recupererListeTransmissionsAutos<Data>(params, axiosOptions), queryOptions )

  return {
    queryKey,
    ...query
  }
}



export const getAutosMSW = () => [
rest.get('*/vehicules/autos', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/carrosseries', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/energies', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/familles', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/groupes_tarification', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/marques', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/motorisations', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/nombres_portes', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),rest.get('*/vehicules/autos/transmissions', (req, res, ctx) => {
        return res(
          ctx.delay(1000),
          ctx.status(200, 'Mocked status'),
        )
      }),]
